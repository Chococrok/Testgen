#!/bin/bash

# functions
log() {
  if [ "$logs" == true ]; then
    for param in $@
    do
      echo "LOG: $param"
    done
  fi
}

# default variables
override=false

# get arguments
while [ $# -gt 0 ]
do
  arg=$1
  case $arg in
    -o)
      while [ -z $answer ]
      do
        echo -e "\n"
        read -p 'Override all existing tests (y/n)' -n 2 answer
        echo -e "\r"
        
        if [ "$answer" = 'y' ]; then
          override=true;
        elif [ "$answer" = 'n' ]; then
          override=false
        else
          answer=""
        fi
      done
      shift
      ;;
    -v)
      logs=true
      shift
      ;;
    *)
      dir=$arg
      shift
      ;;
  esac
done

# check if argument is ok, ask again if not
while [ ! -e "$dir" ]; do
  echo -e "\n$dir is not a valid path"
  read -p 'enter valide path: ' dir
done

# setting needed variables
path=`realpath $dir`
testDirPath=`echo $path | sed -e 's#src/main/java#src/test/java#'`
package=`echo $path | awk -F'/main/java/' '{print $2}' | sed -e 's#/#.#g'`

# create test dir if not existing
if [ ! -e $testDirPath ]; then
  mkdir -p $testDirPath
fi

log "working dir: $dir" "realpath: $path" "testDirPath: $testDirPath"
log "package: $package"

# writting files if not existing or if override=true
let "count=0"
for file in `ls $dir`; do 
  class=`echo $file | awk -F'.' '{print $1}'`
  extension=`echo $file | awk -F'.' '{print $2}'`

  if [ 'java' == "$extension" ]; then
    testFilePath=${testDirPath}/${file}
    if [ ! -e $testFilePath ] || [ $override = true ]; then
      echo "package $package" > $testFilePath
      echo "" >> $testFilePath
      echo "public class $class {" >> $testFilePath
      echo "  @Test" >> $testFilePath
      echo "  public void methodToTest() {}" >> $testFilePath
      echo "}" >> $testFilePath
      echo "SUCCESS file written: $testFilePath"
      let "count++"
    fi
  fi

done

log "$count files proccessed"

if [ $count -gt 0 ]; then
  echo -e "$count files were generated.\n"
else
  echo -e "\nNo file were generated."
  echo -e "There are no java files in $dir \nor the tests already exists.\n"
fi